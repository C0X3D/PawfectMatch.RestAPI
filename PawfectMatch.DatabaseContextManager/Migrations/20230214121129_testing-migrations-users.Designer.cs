// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PawfectMatch.DatabaseContextManager;

#nullable disable

namespace PawfectMatch.DatabaseContextManager.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230214121129_testing-migrations-users")]
    partial class testingmigrationsusers
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("PawfectMatch.DataLayer.ApplicationUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProfileId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProfileId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PawfectMatch.DataLayer.Pet", b =>
                {
                    b.Property<int>("PetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PetId"), 1L, 1);

                    b.Property<int?>("ApplicationUserId")
                        .HasColumnType("int");

                    b.Property<int>("OwnerId")
                        .HasColumnType("int");

                    b.Property<int>("PetBreedId")
                        .HasColumnType("int");

                    b.Property<string>("PetName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PetId");

                    b.HasIndex("ApplicationUserId");

                    b.HasIndex("PetBreedId");

                    b.ToTable("Pet");
                });

            modelBuilder.Entity("PawfectMatch.DataLayer.PetBreed", b =>
                {
                    b.Property<int>("PetBreedId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PetBreedId"), 1L, 1);

                    b.Property<string>("BreedName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BreedTypePetTypeId")
                        .HasColumnType("int");

                    b.Property<int>("PetClassId")
                        .HasColumnType("int");

                    b.HasKey("PetBreedId");

                    b.HasIndex("BreedTypePetTypeId");

                    b.ToTable("PetBreed");
                });

            modelBuilder.Entity("PawfectMatch.DataLayer.PetType", b =>
                {
                    b.Property<int>("PetTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PetTypeId"), 1L, 1);

                    b.Property<string>("PetTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PetTypeId");

                    b.ToTable("PetType");
                });

            modelBuilder.Entity("PawfectMatch.DataLayer.UserProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Adress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfilePictureUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("UserProfile");
                });

            modelBuilder.Entity("PawfectMatch.DataLayer.ApplicationUser", b =>
                {
                    b.HasOne("PawfectMatch.DataLayer.UserProfile", "Profile")
                        .WithMany()
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Profile");
                });

            modelBuilder.Entity("PawfectMatch.DataLayer.Pet", b =>
                {
                    b.HasOne("PawfectMatch.DataLayer.ApplicationUser", null)
                        .WithMany("Pets")
                        .HasForeignKey("ApplicationUserId");

                    b.HasOne("PawfectMatch.DataLayer.PetBreed", "PetBreed")
                        .WithMany()
                        .HasForeignKey("PetBreedId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PetBreed");
                });

            modelBuilder.Entity("PawfectMatch.DataLayer.PetBreed", b =>
                {
                    b.HasOne("PawfectMatch.DataLayer.PetType", "BreedType")
                        .WithMany()
                        .HasForeignKey("BreedTypePetTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BreedType");
                });

            modelBuilder.Entity("PawfectMatch.DataLayer.ApplicationUser", b =>
                {
                    b.Navigation("Pets");
                });
#pragma warning restore 612, 618
        }
    }
}
